% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterByActivity.R
\name{filterByActivity}
\alias{filterByActivity}
\title{Filter \code{alltags} by \code{activity}}
\usage{
filterByActivity(
  src,
  return = "good",
  view = "alltags",
  minLen = 3,
  maxLen = 5,
  maxRuns = 100,
  ratio = 0.85
)
}
\arguments{
\item{src}{src_sqlite object representing the database}

\item{return}{Character. One of "good" (return only 'good' runs), "bad"
(return only 'bad' runs), "all" (return all runs, but with a new
\code{probability} column which identifies 'bad' (0) and 'good' (1) runs.}

\item{view}{Character. Which view to use, one of "alltags" (faster) or
"alltagsGPS" (with GPS data).}

\item{minLen}{Numeric. The minimum run length to allow (equal to or below
this, all runs are 'bad')}

\item{maxLen}{Numeric. The maximum run length to allow (equal to or above
this, all runs are 'good')}

\item{maxRuns}{Numeric. The cutoff of number of runs in a batch (see Details)}

\item{ratio}{Numeric. The ratio cutoff of runs length 2 to number of runs in
a batch (see Details)}
}
\value{
tbl_SQLiteConnection
}
\description{
The \code{activity} table is used to identify batches with too much noise.
Depending on the value of \code{return} these are filtered out, returned, or
identified in the \code{alltags} view with the column \code{probability}. \strong{No changes
to the database are made.}
}
\details{
Runs are identified by the following:
\itemize{
\item All runs with a length >= \code{maxLen} are \strong{GOOD}
\item All runs with a length <= \code{minLen} are \strong{BAD}
\item Runs with a length between \code{minLen} and \code{maxLen} are \strong{BAD} IF both of the
following is true:
\itemize{
\item belong to a batch where the number of runs is >= \code{maxRuns}
\item the ratio of runs with a length of 2 to the number of runs total
is >= \code{ratio}
}
}
}
\examples{

#' # download and access data from project 176 in sql format
# usename and password are both "motus.sample"
\dontrun{sql.motus <- tagme(176, new = TRUE, update = TRUE)}

# OR use example sql file included in `motus`
sql.motus <- tagme(176, update = FALSE, 
                   dir = system.file("extdata", package = "motus"))

tbl_good <- filterByActivity(sql.motus)
tbl_bad <- filterByActivity(sql.motus, return = "bad")
tbl_all <- filterByActivity(sql.motus, return = "all")


}
