% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getRuns.R
\name{getRuns}
\alias{getRuns}
\title{Returns a dataframe containing runs}
\usage{
getRuns(
  src,
  ts.min = NA,
  ts.max = NA,
  match.partial = TRUE,
  motusTagID = c(),
  ambigID = c()
)
}
\arguments{
\item{src}{SQLite connection (result of \code{tagme(XXX)} or
\code{DBI::dbConnect(RSQLite::SQLite(), "XXX.motus")})}

\item{ts.min}{minimum timestamp used to filter the dataframe, Default: NA}

\item{ts.max}{maximum timestamp used to filter the dataframe, Default: NA}

\item{match.partial}{whether runs that partially overlap the specified ts
range are included, Default: TRUE}

\item{motusTagID}{vector of Motus tag ID's used to filter the resulting
dataframe, Default: c()}

\item{ambigID}{vector of ambig ID's used to filter the resulting dataframe,
Default: c()}
}
\value{
a dataframe containing the runID, the motusTagID and the ambigID (if applicable) of runs
}
\description{
Specifically the \code{runID} and \code{motusTagID}, \code{ambigID} and \code{tsBegin} to \code{tsEnd}
(timestamp) range of runs, filtered by optional parameters. The
\code{match.partial} parameter (default = TRUE) determines how timestamp filtering
works. When \code{match.partial} is FALSE, \code{runID}'s are only included when both
\code{tsBegin} and \code{tsEnd} falls between \code{ts.min} and \code{ts.max} (only includes runs
when they entirely contained in the specified range). When match.partial is
TRUE, \code{runID}'s are returned whenever the run partially matches the specified
period.
}
